#!/bin/sh

# Use neovim for vim if present.
[ -x "$(command -v nvim)" ] && alias vim="nvim" vimdiff="nvim -d"

# Use $XINITRC variable if file exists.
[ -f "$XINITRC" ] && alias startx='startx $XINITRC'

[ -f "$MBSYNCRC" ] && alias mbsync='mbsync -c $MBSYNCRC'

# sudo not required for some system commands
for command in mount umount sv pacman updatedb su shutdown poweroff reboot; do
  alias $command="sudo $command"
done
unset command

se() {
  choice="$(find ~/.local/bin -mindepth 1 -printf '%P\n' | fzf)"
  [ -f "$HOME/.local/bin/$choice" ] && $EDITOR "$HOME/.local/bin/$choice"
}

# Verbosity and settings that you pretty much just always are going to want.

# CSS extraction aliases for Unix shells
# Extract all inline CSS from HTML file to CSS file
alias extract-inline-css='grep -oP "style=\"[^\"]*\"" "$1" | \
  sed "s/style=\"//g" | \
  sed "s/\"$//g" | \
  sed "s/;/;\n/g" | \
  sort -u > "${1%.*}.css"'

# More comprehensive extraction with element context
alias html2css='perl -ne "print \$1.\"\n\" if /style=\"([^\"]+)\"/g" "$1" | \
  sed "s/;/;\n/g" | \
  sort -u > "${1%.*}.css"'

# Extract and format inline styles with basic CSS structure
alias inline2css='awk "/style=/{match(\$0,/style=\"[^\"]*\"/); \
  print substr(\$0,RSTART+7,RLENGTH-8)}" "$1" | \
  tr ";" "\n" | \
  sed "/^$/d" | \
  sort -u > "${1%.*}.css"'

# Advanced extraction with element tag context (creates structured CSS)
alias css-extract='sed -n "s/.*<\([^[:space:]>]*\)[^>]*style=\"\([^\"]*\)\".*/\1 { \2 }/p" \
  "$1" | \
  sed "s/;/ ;\n  /g" | \
  sed "s/{/ {\n  /g" | \
  sed "s/}/ \n}\n/g" > "${1%.*}.css"'

# Simple one-liner for quick extraction
alias getcss='grep -o "style=\"[^\"]*\"" "$1" | \
  cut -d"\"" -f2 | \
  tr ";" "\n" | \
  sort -u > "${1%.*}.css"'

# Extract with class/id context for better CSS organization
alias extract-contextual='sed -n "s/.*\(class=\"[^\"]*\"\|id=\"[^\"]*\"\).*style=\"\([^\"]*\)\".*/\1: \2/p" \
  "$1" | \
  sed "s/;/;\n    /g" | \
  sort -u > "${1%.*}.css"'

# Clean extraction removing duplicate properties
alias css-clean='grep -o "style=\"[^\"]*\"" "$1" | \
  cut -d"\"" -f2 | \
  sed "s/;/\n/g" | \
  sed "s/^[[:space:]]*//" | \
  sed "/^$/d" | \
  sort -u > "${1%.*}.css"'

alias \
  dotfiles="git --git-dir=$HOME/.config/dotfiles --work-tree=$HOME" \
  go="cd ~/deno-genesis/ && git pull && git-automate"

alias \
  cp="cp -iv" \
  mv="mv -iv" \
  rm="rm -vI" \
  bc="bc -ql" \
  rsync="rsync -vrPlu" \
  mkd="mkdir -pv" \
  yt="yt-dlp --embed-metadata -i" \
  yta="yt -x -f bestaudio/best" \
  ytt="yt --skip-download --write-thumbnail" \
  ffmpeg="ffmpeg -hide_banner"

# Colorize commands when possible.
alias \
  ls="ls -hN --color=auto --group-directories-first" \
  grep="grep --color=auto" \
  diff="diff --color=auto" \
  ccat="highlight --out-format=ansi" \
  ip="ip -color=auto"

# These common commands are just too long! Abbreviate them.
alias \
  ka="killall" \
  g="git" \
  trem="transmission-remote" \
  YT="youtube-viewer" \
  sdn="shutdown -h now" \
  e='$EDITOR' \
  v='$EDITOR' \
  p="pacman" \
  xi="sudo xbps-install" \
  xr="sudo xbps-remove -R" \
  xq="xbps-query" \
  z="zathura"

alias \
  lf="lfub" \
  magit="nvim -c MagitOnly" \
  ref='shortcuts >/dev/null; source ${XDG_CONFIG_HOME:-$HOME/.config}/shell/shortcutrc ; source ${XDG_CONFIG_HOME:-$HOME/.config}/shell/shortcutenvrc ; source ${XDG_CONFIG_HOME:-$HOME/.config}/shell/zshnameddirrc'
